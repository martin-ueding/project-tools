#!/usr/bin/python
# Copyright (c) 2010, 2012 Martin Ueding <dev@martin-ueding.de>

"""
Goes through text based files and searches for C{TODO}, C{FIXME} and the like
comments. It strips the comment from it, categorizes them in the different tags
and gives a table for each file with hits.
"""

import os.path
import re
import subprocess

import prettytable

comments = [r"//", r"#", r"/\*", r"<!--"]
end_comments = [r"\*/", "-->"]

keywords = ["TODO", "HACK", "FIXME", "XXX"]

def get_regex():
    return r"(%s)\s*(%s)" % ("|".join(comments), "|".join(keywords))

def main():
    try:
        grep_output = subprocess.check_output(["grep", "-RIEn", get_regex(), "."])
    except subprocess.CalledProcessError as e:
        if e.returncode == 2:
            print e
    else:
        grep_lines = grep_output.split("\n")

        findings = []

        for grep_line in grep_lines[:-1]:
            finding = []
            parts = grep_line.split(":", 2)
            finding.append(os.path.normpath(parts[0]))
            finding.append(int(parts[1]))
            m = re.match(r"^.*(%s):?(.*?)(%s)?$" % ('|'.join(keywords), '|'.join(end_comments)), parts[2])
            if not m is None:
                finding.append(m.group(1).strip())
                finding.append(m.group(2).strip())


            findings.append(finding)

        files = {}
        for finding in findings:
            if not finding[0] in files:
                files[finding[0]] = []

            files[finding[0]].append(finding[1:])

        first = True

        for filename, tasks in files.items():
            if first:
                first = False
            else:
                print

            print filename
            prettytable.print_table(None, tasks)

if __name__ == "__main__":
    main()
